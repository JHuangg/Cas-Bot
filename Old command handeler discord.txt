'use strict';

const Discord = require('discord.js');

//default node system, lets you work with files within the system in your computer
const fs = require('fs');

const client = new Discord.Client();

//discord collection to store commands
client.commands = new Discord.Collection();

const { prefix, token } = require('./config.json');

//make sure all files are js files, so read file system, then go to commands directory, then filter files that end with js
const commandFiles = fs
  .readdirSync('./commands')
  .filter(file => file.endsWith('.js'));

client.login(token);

client.on('ready', () => {
  console.log('I am ready!');
  client.user.setActivity('Time to run commands :)');
});

//Loop through the command files,
for (const file of commandFiles) {
  const command = require(`./commands/${file}`);
  client.commands.set(command.name, command);
}

client.on('message', message => {
  if (!message.content.startsWith(prefix) || message.author.bot) return;

  //create args and commands, split command after each space. Each argument is a command
  const args = message.content.slice(prefix.length).trim().split(/ +/);
  const command = args.shift().toLowerCase();

  //if client.commands does not contain the command determined above, then return
  if (!client.commands.has(command)) return;

  try {
    //try getting the command, then executing the message and args from that command
    client.commands.get(command).execute(message, args);
  } catch (error) {
    console.error(error);
    message.reply('Problems with that command!');
  }
});

/*

// const command = client.commands.get(commandName);
  //IF STATEMNET TO FIND MESSAGE CONTENT
  if (message.content === 'spongebob') {
    const attachment = new Discord.MessageAttachment('./images/happy.jpg');
    message.channel.send(`${message.author}`, attachment);

      if (message.content === `${prefix}name`) {
    message.channel.send(message.guild.name);
  } else if (message.content === `${prefix}online`) {
    message.channel.send(`total members: ${message.guild.memberCount}`);
  } else if (message.content === `${prefix}me`) {
    message.channel.send(`Username: ${message.author.username}`);
  }
  }


    if (command === 'args') {
    if (!args.length) {
      return message.channel.send(
        `you have not input any arguments, ${message.author}!`
      );
    }

    const taggedUser = message.mentions.users.first();

    message.channel.send(`Command name: ${command}\nArguments: ${args}`);
  }
  */
//message.author.displayAvatarURL()
//message.reply
//message.channel.send('')
